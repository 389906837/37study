<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
    <description>apache shiro配置</description>
	<!-- shiro缓存配置 -->
	<bean id="shiroCache" class="com.cloud.cang.security.core.ShiroRedisCache">
		<property name="cached" ref="cacheUtils" />
		<property name="name" value="shiro-" />
	</bean>
	<bean id="shiroCacheManager" class="com.cloud.cang.security.core.ShiroRedisCacheManager">
		<property name="shiroRedisCache" ref="shiroCache" />
	</bean>
	<!-- session管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"/>
	<bean id="shiroChainUpdate" class="com.cloud.cang.security.listener.ShiroChainUpdate">
		<property name="filterChainDefinitions">
	        <value>
	        	/logout = logout
				/uc/login.html = anon
				/personal/** = user,concurrentlogin
				/index/** = user,concurrentlogin
				/order/** = user,concurrentlogin
				/replenishment/** = user,concurrentlogin
	        </value>
	    </property>
	</bean>
	<!-- 并发登录控制 -->
	<bean id="concurrentLoginControlFilter" class="com.cloud.cang.security.filter.ConcurrentLoginControlFilter">
	    <property name="cacheManager" ref="shiroCacheManager" />
	    <property name="sessionRepository" ref="redisSessionRepository"></property>
		<!-- 默认剔除前者 -->
	    <property name="kickoutAfter" value="false"/> 
	    <!-- 允许并发登录的数量 -->
	    <property name="maxSession" value="1"/>
	    <!-- 地址 -->
	    <property name="kickoutUrl" value="/index/main.html"/>  
	</bean>
	<bean id="ssoClientFilter" class="com.cloud.cang.security.filter.SSOFilter"/>
	<bean id="ssoClientOutFilter" class="com.cloud.cang.security.filter.SSOOutFilter">
		<property name="sessionRepository" ref="redisSessionRepository"></property>
	</bean>
	<!-- 自定义的Realm -->
	<bean id="shiroDbRealm" class="com.cloud.cang.security.realm.ShiroDbRealm">
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher" />
		<property name="cacheManager"  ref="shiroCacheManager" ></property>
	</bean>
	<bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">  
        <property name="hashAlgorithmName" value="Sha1" />  
        <property name="storedCredentialsHexEncoded" value="true" />  
        <property name="hashIterations" value="0" />  
    </bean>
	<bean id="modelAuthricator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
         <property name="realms">
           <list>
             	<!-- 自定义的Realm -->
				<ref bean="shiroDbRealm" />
           </list>
        </property>
       <property name="authenticationListeners">
           <list>
             <bean class="com.cloud.cang.security.listener.LoginListener"></bean>
           </list>
        </property>
    </bean>
    <bean id="modelAuthorizer" class="org.apache.shiro.authz.ModularRealmAuthorizer">
         <property name="realms">
           <list>
			   <!-- 自定义的Realm -->
				<ref bean="shiroDbRealm" />
           </list>
        </property>
    </bean>
    <bean id="firstSuccess" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"/>
    
	<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- session 管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="authenticator" ref="modelAuthricator"/>
		<!-- 数据库认证的实现 权限用的 -->
		<property name="authorizer" ref="modelAuthorizer"/>
	</bean>
	<bean id="userFilter" class="com.cloud.cang.wap.common.filter.UserFilter"/>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="${wap.http.domain}/index/main.html"></property>
	</bean>
    <bean id="perms" class="com.cloud.cang.security.filter.PermissionsAuthorizationFilter"></bean>
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${shiro.pageLoginUrl}" /><!-- ${shiro.loginUrl} -->
		<property name="successUrl" value="${shiro.successUrl}" />
		<property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}" />
		<property name="filters">
			<map>
				<entry key="logout" value-ref="logoutFilter" />
				<entry key="user" value-ref="userFilter" />
				<entry key="perms" value-ref="perms" />
				<entry key="concurrentlogin" value-ref="concurrentLoginControlFilter"/>
			</map>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>